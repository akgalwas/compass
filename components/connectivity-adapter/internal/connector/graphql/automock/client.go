// Code generated by mockery v1.0.0. DO NOT EDIT.

package automock

import externalschema "github.com/kyma-incubator/compass/components/connector/pkg/graphql/externalschema"

import mock "github.com/stretchr/testify/mock"

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Configuration provides a mock function with given fields: clientID
func (_m *Client) Configuration(clientID string) (externalschema.Configuration, error) {
	ret := _m.Called(clientID)

	var r0 externalschema.Configuration
	if rf, ok := ret.Get(0).(func(string) externalschema.Configuration); ok {
		r0 = rf(clientID)
	} else {
		r0 = ret.Get(0).(externalschema.Configuration)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(clientID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SignCSR provides a mock function with given fields: csr, clientID
func (_m *Client) SignCSR(csr string, clientID string) (externalschema.CertificationResult, error) {
	ret := _m.Called(csr, clientID)

	var r0 externalschema.CertificationResult
	if rf, ok := ret.Get(0).(func(string, string) externalschema.CertificationResult); ok {
		r0 = rf(csr, clientID)
	} else {
		r0 = ret.Get(0).(externalschema.CertificationResult)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(csr, clientID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
